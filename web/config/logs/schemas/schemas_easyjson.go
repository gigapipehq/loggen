// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package schemas

import (
	json "encoding/json"
	_v6 "github.com/brianvoe/gofakeit/v6"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson2189435aDecodeGithubComGigapipehqLoggenWebConfigLogsSchemas(in *jlexer.Lexer, out *GeneratorFunctionList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(GeneratorFunctionList, 0, 0)
			} else {
				*out = GeneratorFunctionList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 GeneratorFunction
			(v1).UnmarshalEasyJSON(in)
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson2189435aEncodeGithubComGigapipehqLoggenWebConfigLogsSchemas(out *jwriter.Writer, in GeneratorFunctionList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			(v3).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v GeneratorFunctionList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson2189435aEncodeGithubComGigapipehqLoggenWebConfigLogsSchemas(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GeneratorFunctionList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson2189435aEncodeGithubComGigapipehqLoggenWebConfigLogsSchemas(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GeneratorFunctionList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson2189435aDecodeGithubComGigapipehqLoggenWebConfigLogsSchemas(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GeneratorFunctionList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson2189435aDecodeGithubComGigapipehqLoggenWebConfigLogsSchemas(l, v)
}
func easyjson2189435aDecodeGithubComGigapipehqLoggenWebConfigLogsSchemas1(in *jlexer.Lexer, out *GeneratorFunction) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "display":
			out.Display = string(in.String())
		case "category":
			out.Category = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "example":
			out.Example = string(in.String())
		case "params":
			if in.IsNull() {
				in.Skip()
				out.Params = nil
			} else {
				in.Delim('[')
				if out.Params == nil {
					if !in.IsDelim(']') {
						out.Params = make([]_v6.Param, 0, 0)
					} else {
						out.Params = []_v6.Param{}
					}
				} else {
					out.Params = (out.Params)[:0]
				}
				for !in.IsDelim(']') {
					var v4 _v6.Param
					easyjson2189435aDecodeGithubComBrianvoeGofakeitV6(in, &v4)
					out.Params = append(out.Params, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson2189435aEncodeGithubComGigapipehqLoggenWebConfigLogsSchemas1(out *jwriter.Writer, in GeneratorFunction) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"display\":"
		out.RawString(prefix[1:])
		out.String(string(in.Display))
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"example\":"
		out.RawString(prefix)
		out.String(string(in.Example))
	}
	if len(in.Params) != 0 {
		const prefix string = ",\"params\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v5, v6 := range in.Params {
				if v5 > 0 {
					out.RawByte(',')
				}
				easyjson2189435aEncodeGithubComBrianvoeGofakeitV6(out, v6)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GeneratorFunction) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson2189435aEncodeGithubComGigapipehqLoggenWebConfigLogsSchemas1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GeneratorFunction) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson2189435aEncodeGithubComGigapipehqLoggenWebConfigLogsSchemas1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GeneratorFunction) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson2189435aDecodeGithubComGigapipehqLoggenWebConfigLogsSchemas1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GeneratorFunction) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson2189435aDecodeGithubComGigapipehqLoggenWebConfigLogsSchemas1(l, v)
}
func easyjson2189435aDecodeGithubComBrianvoeGofakeitV6(in *jlexer.Lexer, out *_v6.Param) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "field":
			out.Field = string(in.String())
		case "display":
			out.Display = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "optional":
			out.Optional = bool(in.Bool())
		case "default":
			out.Default = string(in.String())
		case "options":
			if in.IsNull() {
				in.Skip()
				out.Options = nil
			} else {
				in.Delim('[')
				if out.Options == nil {
					if !in.IsDelim(']') {
						out.Options = make([]string, 0, 4)
					} else {
						out.Options = []string{}
					}
				} else {
					out.Options = (out.Options)[:0]
				}
				for !in.IsDelim(']') {
					var v7 string
					v7 = string(in.String())
					out.Options = append(out.Options, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "description":
			out.Description = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson2189435aEncodeGithubComBrianvoeGofakeitV6(out *jwriter.Writer, in _v6.Param) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"field\":"
		out.RawString(prefix[1:])
		out.String(string(in.Field))
	}
	{
		const prefix string = ",\"display\":"
		out.RawString(prefix)
		out.String(string(in.Display))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"optional\":"
		out.RawString(prefix)
		out.Bool(bool(in.Optional))
	}
	{
		const prefix string = ",\"default\":"
		out.RawString(prefix)
		out.String(string(in.Default))
	}
	{
		const prefix string = ",\"options\":"
		out.RawString(prefix)
		if in.Options == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Options {
				if v8 > 0 {
					out.RawByte(',')
				}
				out.String(string(v9))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	out.RawByte('}')
}
func easyjson2189435aDecodeGithubComGigapipehqLoggenWebConfigLogsSchemas2(in *jlexer.Lexer, out *CategoryList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(CategoryList, 0, 4)
			} else {
				*out = CategoryList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v10 string
			v10 = string(in.String())
			*out = append(*out, v10)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson2189435aEncodeGithubComGigapipehqLoggenWebConfigLogsSchemas2(out *jwriter.Writer, in CategoryList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v11, v12 := range in {
			if v11 > 0 {
				out.RawByte(',')
			}
			out.String(string(v12))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v CategoryList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson2189435aEncodeGithubComGigapipehqLoggenWebConfigLogsSchemas2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CategoryList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson2189435aEncodeGithubComGigapipehqLoggenWebConfigLogsSchemas2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CategoryList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson2189435aDecodeGithubComGigapipehqLoggenWebConfigLogsSchemas2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CategoryList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson2189435aDecodeGithubComGigapipehqLoggenWebConfigLogsSchemas2(l, v)
}
